@use 'sass:math';

.section-hero {
  background-position: 85% center;
  @include media-breakpoint-up(lg) {
    background-position: center center;
  }

  .section-hero-container {
    padding: 25% 0;
    @include media-breakpoint-up(lg) {
      padding: 0;
    }
  }

  .video-container-item {
    position: absolute;
    bottom: -12%;
    z-index: 2;
    @include media-breakpoint-up(lg) {
      width: 800px;
      bottom: -5%;
    }
  }

  .video-container-item-1 {
    left: -10%;
  }

  .video-container-item-2 {
    right: -10%;
    @include transform(scaleX(-1));
  }

  @include media-breakpoint-up(lg) {
    .video-container-item-1 {
      left: -2%;
    }
    .video-container-item-2 {
      right: -2%;
    }
  }
}

.section-hero-content {
  position: relative;
  z-index: 20;
  @include media-breakpoint-up(lg) {
    width: 100%;
    max-width: 600px;
    margin: auto;
    text-align: center;
  }
}

.hero-content-cooperate {
  @include flexbox;
  @include align-items(center);
  @include justify-content(center);
  background-image: url('../images/bg/video-container.png');
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;

  .hero-content-text {
    font-size: 50px;
    color: #ffffff;
    text-shadow: 0px 2px 8px #3259b4;
    width: 50px;
    text-align: center;
    @include media-breakpoint-up(lg) {
      width: 100px;
      padding: 0 10px 0 20px;
    }
  }

  .hero-content-logo {
    img {
      height: 75px;
      object-fit: contain;
      @include media-breakpoint-up(lg) {
        height: 150px;
      }
    }
  }
}

.hero-content-buttons {
  p {
    text-align: center;
    color: #fff;
    font-size: 12px;
    text-shadow: rgb(50, 89, 180) 2px 0px 0px,
    rgb(50, 89, 180) 1.75517px 0.958851px 0px,
    rgb(50, 89, 180) 1.0806px 1.68294px 0px,
    rgb(50, 89, 180) 0.141474px 1.99499px 0px,
    rgb(50, 89, 180) -0.832294px 1.81859px 0px,
    rgb(50, 89, 180) -1.60229px 1.19694px 0px,
    rgb(50, 89, 180) -1.97998px 0.28224px 0px,
    rgb(50, 89, 180) -1.87291px -0.701566px 0px,
    rgb(50, 89, 180) -1.30729px -1.5136px 0px,
    rgb(50, 89, 180) -0.421592px -1.95506px 0px,
    rgb(50, 89, 180) 0.567324px -1.91785px 0px,
    rgb(50, 89, 180) 1.41734px -1.41108px 0px,
    rgb(50, 89, 180) 1.92034px -0.558831px 0px;
  }
}

.firefly-wrap {
  .firefly {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 0.6vw;
    height: 0.6vw;
    margin: -0.2vw 0 0 9.8vw;
    animation: ease 200s alternate infinite;
    pointer-events: none;

    &::before,
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      transform-origin: -10vw;
    }

    &::before {
      background: black;
      opacity: 0.4;
      animation: drift ease alternate infinite;
    }

    &::after {
      background: white;
      opacity: 0;
      box-shadow: 0 0 0vw 0vw yellow;
      animation: drift ease alternate infinite, flash ease infinite;
    }
  }

  @keyframes drift {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes flash {
    0%,
    30%,
    100% {
      opacity: 0;
      box-shadow: 0 0 0vw 0vw yellow;
    }
    5% {
      opacity: 1;
      box-shadow: 0 0 2vw 0.4vw yellow;
    }
  }

  $quantity: 15;

  @for $i from 1 through $quantity {
    $steps: random(12) + 16;
    $rotationSpeed: random(10) + 8s;

    .firefly:nth-child(#{$i}) {
      animation-name: move#{$i};

      &::before {
        animation-duration: #{$rotationSpeed};
      }

      &::after {
        animation-duration: #{$rotationSpeed}, random(6000) + 5000ms;
        animation-delay: 0ms, random(8000) + 500ms;
      }
    }

    @keyframes move#{$i} {
      @for $step from 0 through $steps {
        #{$step * math.div(100 , $steps)}% {
          transform: translateX(random(100) - 50vw) translateY(random(100) - 50vh) scale(math.div(random(75), 100) + 0.25);
        }
      }
    }
  }
}
